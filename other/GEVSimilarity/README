--------------------
Project Description:
--------------------
The project, GEVSimilarity, is a small side project to examine the
similarity of GEV curves produced by different combinations of
k, sigma, and mu (shape, scale, and location parameters, respectively).
The goal is to produce a much smaller subset of parameters that produce
all GEV curves in the feasible range of curves expected for the main project.

The project is part java and part C++.

NOTE:  the project is in progress and the C++ build has not yet been
    completely adjusted for other operating systems (specifically, 
    setting the path for the boost libraries might need to be improved).  
    A list for known OS builds will be here when tests on one system are complete.

------------
Required
------------
(1) Java 7 or later
(2) maven2
(3) C++
(4) autotools (autoconf, automake)


-----------
Building
-----------
(1) The Java portion:

    (a) mvn clean compile

    (b) mvn test -Dtest=algorithms.curves.GEVSimilarityToolTest

       *This creates an output file tmpdata2/similar_curve_parameters.txt
        that is used as input for the C++ code.

        It also creates a large log file containing statements about
        the similar and unique curves.  The log file is in
        target/sure-fire-reports/algorithms.curves.GEVSimilarityToolTest-output.txt

        It also creates transparent images in subdirectory target/ as png images
        that can be viewed as layers together to see the range of parameters.

        It also creates the curves for the similar spectra as an html file
        for ease of seeing the similar curves and their parameter dependent
        evolution.  target/test-classes/

(2) The C++ portion:

    (a) aclocal
        generates m4 files and sub-directory

    (b) autoconf
        generates configure from configure.ac

    (c) automake -a -c
        to generate Makefile.in

    (d) ./configure --with-boostinc=<location of boost tr1 subdirectory in c++ headers>
        generates the Makefile
            example:  
                ./configure --with-boostinc=/usr/include/c++/4.2.1/tr1

    (e) make
        compiles the sources into objects, links, and creates target executables

    Then to run the code, 
        make runtest

       *This reads the file tmpdata2/similar_curve_parameters.txt
    
        The code calculates the smallest set of parameters (k, sigma, and mu) which can represent
        the entire range of curves.

        The results are copied to a file called sim_curve_params_01.txt
        which is in directory ../../src/main/resources/
        That's the main project directory and that file will then be used in subsequent runs
        of the main code.
