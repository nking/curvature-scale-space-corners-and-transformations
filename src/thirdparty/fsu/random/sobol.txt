see https://people.sc.fsu.edu/~jburkardt/cpp_src/sobol/sobol.html
for
https://people.sc.fsu.edu/~jburkardt/cpp_src/sobol/sobol.cpp
https://people.sc.fsu.edu/~jburkardt/cpp_src/sobol/sobol.hpp

SOBOL is a C++ library which computes elements of the Sobol quasirandom sequence, by Bennett Fox.

A quasirandom or low discrepancy sequence, such as the Faure, Halton, Hammersley, Niederreiter or Sobol sequences, is "less random" than a pseudorandom number sequence, but more useful for such tasks as approximation of integrals in higher dimensions, and in global optimization. This is because low discrepancy sequences tend to sample space "more uniformly" than random numbers. Algorithms that use such sequences may have superior convergence.

SOBOL is an adapation of the INSOBL and GOSOBL routines in ACM TOMS Algorithm 647 and ACM TOMS Algorithm 659. The original code can only compute the "next" element of the sequence. The revised code allows the user to specify the index of any desired element.

A remark by Joe and Kuo shows how to extend the algorithm from the original maximum spatial dimension of 40 up to a maximum spatial dimension of 1111. The FORTRAN90 and C++ versions of this program have been updated in this way. In particular, the extra data in the C++ version of the program was kindly formatted and supplied by Steffan Berridge.

The routines with a prefix of I8_ use 64 bit integers, and use the long int to get this. On some systems, a long int is simply 32 bits. In that case, try using the long long int datatype instead.

Licensing:
The computer code and data files described and made available on this web page are distributed under the GNU LGPL license.


notes from:
Chapter 5.4 of
"Modern Computational Finance: AAD and Parallel Simulations",
2018, by Antoine Savine, Leif Andersen
https://www.wiley.com/en-us/Modern+Computational+Finance%3A+AAD+and+Parallel+Simulations-p-9781119539520


I. M. Sobol. Sobol’s original publication. USSR Computational Mathematics
and Mathematical Physics, 7(4):86–112, 1967.

The construction speed of Sobol’s sequence was massively improved in 1979
by Antonov and Saleev, whose algorithm generates successive Sobol points
extremely fast, with just a few low-level bit-wise operations. It is this implementation that is typically presented in literature, including here. Over the
past 20 years, Jaeckel [63] and Joe and Kuo [72], [73] performed considerable work on Sobol’s direction numbers12 so that the sequence could be
practically applied in the very high dimension familiar to finance, achieving
remarkable results. Sobol’s sequence (with Antonov and Saleev’s optimization and Jaeckel or Joe and Kuo’s direction numbers) became a best practice
in financial applications, which it remains to this day.

---------------
more on Monte Carlo, Sobol, lattice points, digital nets:
https://people.cs.kuleuven.be/~dirk.nuyens/taiwan/QMC-practical-guide-20161107-2up.pdf

code:
https://people.cs.kuleuven.be/~dirk.nuyens/

