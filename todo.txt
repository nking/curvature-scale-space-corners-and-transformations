-- note, when considering computer vision in water,
   -- consider that the mantis shrimp holds 16 color receptive cones
   compared to only just r,g,b.  also has polarization sensitivity.
   read about cameras designed after mantis shrimp vision.
-- consider bee vision's uv sensitivity and polarization sensitivity
   and multiple apertures
   for atmospheric computer vision (ability to tell direction of sun)
-- consider the bird eye's oil drops...
-- for sky direction, bees have more sensitivity to UV and polarization
   so can tell direction of sun quickly

-- apply mser to the test images of the computer vision and robotics books 
(img_books_illum3*) with lowered thresholds to pick up the fainter text
too, then use the EdgesWrapper on it or explore other means of identifying
the text regions in the MSER results.  a couple of recent papers use MSER
in neural networks as fast text detecting algorithms to` find signs in images.
if need to calculate stroke widths, could mask out all regions not possibly
text and quickly hollow out insides of letters, then use a distance transform
on the image or cropped image.

-- normalize matrix data in NormalizedCuts to zero mean and unit variance when
   create edge weights.
   consider using power method when useful in NormalizedCuts.

-- for the mser code where have needed to handle shifting of image for
points near 0 and 180 boundaries, could instead adjust the algorithm
to always take the minimum of i_1 - i_2 and i_1+180 - i_2...
   -- for serveral areas of the object finding and matching algorithms, need to
      consider using different distance methods.  e.g. can use cosine similarity
      for angle based differences.

-- if update libquantum porting to 1.1.1,
   consider browsing Nielson's book which Cambridge publishing is no
   longer selling:
       http://www-reynal.ensea.fr/docs/iq/QC10th.pdf

   -- Hubbard and Ising models

-- re-evaluate whether or not could be useful in the canny color edges
   algorithm to also use the polar chroma image that is shifted by
   some amount.  did i include the wrap around difference already in
   intrpreting the polar chroma image?

-- when return to the libquantum code:
   -- add back the ability to use the objcode and density classes
   -- port the ising model from 1.1.1

-- acousto optics

-- geohashing, multi-D vornoi, approx nearest neighbor, falconn, etc.
-- vocabulary trees
-- kdtree with different attributes for each level.

-- when return to reading on neural networks, see these 2:
   https://playground.tensorflow.org/#activation=tanh&batchSize=10&dataset=circle&regDataset=reg-plane&learningRate=0.03&regularizationRate=0&noise=0&networkShape=4,2&seed=0.21870&showTestData=false&discretize=false&percTrainData=50&x=true&y=true&xTimesY=false&xSquared=false&ySquared=false&cosX=false&sinX=false&cosY=false&sinY=false&collectStats=false&problem=classification&initZero=false&hideText=false

-- Neural networks:
   -- optimization:
      http://neuralnetworksanddeeplearning.com/chap3.html
      https://github.com/jaberg/hyperopt
      (Bergstra and Bengio 2012)

   -- alternative to minimize cost function instead of stochastic
      gradient descent is LBFGS.

-- do exercises for Fig 4.11, pg 220 of Bishop 2006
-- http://www.gaussianprocess.org/gpml/code/matlab/doc/
   and tensorflow
     https://github.com/NervanaSystems/neon
     https://en.wikipedia.org/wiki/Theano_(software)
     https://en.wikipedia.org/wiki/Torch_(machine_learning)

-- impl iterative reweighted least squares

-- for the smoothing of the separation curve,
   could retry knn, that is use same pyramidal,
   but without re-sampling AND divide each range
   by h to include volume, making the curve density.
     see bishop 2006, chap 2.5

 (1) reading bishop 2006
    and looking at
    http://www.gaussianprocess.org/gpml/code/matlab/doc/
    and tensorflow
    -- Conditional Random Fields
    -- variational Bayes and expectation propagation

 (1.5) general review of control theory and use of it in
       systems biology (e.g. high osmolarity glycerol (HOG)
       pathway system).

(2) read the remote sensing paper

-- consider using Median Absolute Deviation for outlier removal where I have used
   standard deviation of the mean.

-- consider making a greyscale MSEREdges

-- consider implementing a affine transformation class

-- consider implementing a 3-view transformation solver
   ...trifocal tensor

-- consider implementing an "integral image" method for the L1 differences, that is, the 
   absolute value of the pixel differences in summed area table format for fast
   extraction.
     Note that cannot use the summed are table format for L2 differences as the
     exponent gets combined into successive terms and separability of inner quadrants
     then is not possible in 4 operations.

-- interesting:
   solving the transformations between 2 images
   when have most of the camera matrix except focal length.

   http://www.vis.uky.edu/~stewe/publications/stewenius_05_cvpr_focal.pdf

   for Structure in Motion, camera information is needed and 5 points of
      correspondence.
   When camera infor is not available, epipolar geometry w/ 7 points of
      correspondence is used, but is not as stable.

   also see
       P. Sturm, On Focal Length Calibration from Two Views,
       IEEE International Conference on Computer Vision and Pattern
       Recognition, Volume 2, pp. 145â€“150, 2001
 
-- consider implementing Paris and Durand 2007
     -- uses kruskal's mst for merging os is a fast NlogN

-- consider implementing one day, compressed histogram of grdients:
http://web.stanford.edu/~bgirod/pdfs/Chandrasekhar_CVPR2009.pdf

-- low priority: improve the auxillary methods in the partial shape matchers
    to calculate cost when given correspondence.

-- consider implementing Tarjans latest paper (bipartite matching)

-- consider implementing vanishing lines based upon MSER ellipses

-- consider making a version of normalized cuts that uses the spatial location
    of points too (lkeeping labeled regions contiguous)

-- consider implementing a mean shift algorithm

-- read more on "Simultaneous Localization and Mapping, or SLAM"
     
-- consider following the implementation of disparity maps for stereo images
   and 3d modelling.  see notes in the docs directory.
   -- see http://vision.middlebury.edu/stereo/code/

-- test for degenerate camera conditions:
   -- parallel camera motion w/o rotation 
-- test for degenerate scene structure configurations
   -- all points lying on a plane or nearly lying on a plane (?)
-- test for point sets containing noise

-- more reading on 3d reconstruction
   and http://www.cs.cornell.edu/~snavely/projects/skeletalset/SkeletalSets_cvpr08.pdf

-- finish the special topics reading
   -- add to it "Mastering the game of Go with 
      deep neural networks and tree search"
      which is reinforcement learning in ML
2  --  https://openproceedings.org/2016/conf/edbt/paper-54.pdf
   -- https://link.springer.com/chapter/10.1007%2F978-3-642-21887-3_28?LI=true
   -- the go game playing paper referenced in quantum_notes.txt, espec. compared
          to gobmk

-- priority is implement when needed:
   considering algorithms to implement:
   0: looking at bayesian optimization
   1: hybrid global search
      considering these
          -- scatter
              https://www.researchgate.net/publication/228011098_The_Scatter_Search_Methodology
          -- tabu
              http://www.iro.umontreal.ca/~dift6751/paper_glover_ts_2.pdf
          -- pso
             https://github.com/CAChemE/stochastic-optimization
   2: Metropolis:
         http://introcs.cs.princeton.edu/java/98simulation/Metropolis.java.html
      http://introcs.cs.princeton.edu/java/98simulation/MarkovChain.java.html
      http://web.engr.illinois.edu/~bkclark/PIMCTutorial/tutorial.pdf
        https://arxiv.org/pdf/quant-ph/9607014.pdf
      -- importance sampling
         http://jrxv.net/x/16/ism.pdf

  look into these for the Shape Matchers: Toeplitz matrix, cyclic matrix


